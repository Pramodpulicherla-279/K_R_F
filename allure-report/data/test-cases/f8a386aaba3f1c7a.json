{"uid":"f8a386aaba3f1c7a","name":"Test valid login","fullName":"tests.test_login#test_login_success","historyId":"86600b41e86dab7ca99f472fa61e4b05","time":{"start":1751969191655,"stop":1751969214692,"duration":23037},"status":"failed","statusMessage":"AssertionError: ❌ Login test failed: Username input not found\nassert None is not None","statusTrace":"driver = <appium.webdriver.webdriver.WebDriver (session=\"15b50050-592d-429b-9285-46bb8680ebbb\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login\")\n    def test_login_success(driver):\n        try:\n            # STEP 1: Enter username\n            username_locator = locators[\"username_input\"]\n            username = wait_for_element(driver, locators[\"username_input\"])\n>           assert username is not None, \"Username input not found\"\nE           AssertionError: Username input not found\nE           assert None is not None\n\ntests\\test_login.py:25: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"15b50050-592d-429b-9285-46bb8680ebbb\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login\")\n    def test_login_success(driver):\n        try:\n            # STEP 1: Enter username\n            username_locator = locators[\"username_input\"]\n            username = wait_for_element(driver, locators[\"username_input\"])\n            assert username is not None, \"Username input not found\"\n            username.send_keys(\"testuser\")\n    \n            # STEP 2: Enter password\n            password_locator = locators[\"password_input\"]\n            password = wait_for_element(driver, password_locator)\n            assert password is not None, \"Password input not found\"\n            password.send_keys(\"password123\")\n    \n            # STEP 3: Tap submit button\n            submit_locator = locators[\"submit_button\"]\n            submit = wait_for_element(driver, submit_locator)\n            assert submit is not None, \"Submit button not found\"\n            submit.click()\n    \n            # STEP 4: Wait for success UI (e.g., dashboard title)\n            success_title_locator = locators.get(\"dashboard_title\")\n            dashboard = wait_for_element(driver, success_title_locator)\n            assert dashboard is not None, \"Login likely failed: dashboard not loaded\"\n    \n            allure.attach(\"Login success\", name=\"Test Status\")\n    \n        except Exception as e:\n            screenshot_path = f\"screenshots/failed_login.png\"\n            driver.save_screenshot(screenshot_path)\n            allure.attach.file(screenshot_path, name=\"Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n    \n            # Optional: Use OCR fallback\n            ocr_text = extract_text_from_image(screenshot_path)\n            print(\"\uD83E\uDDE0 OCR Detected:\", ocr_text)\n    \n            # Optional: AI agent recovery suggestion\n            if AI_KEY:\n                fix_suggestion = ai_agent.suggest_fix(str(e), screenshot_path)\n                allure.attach(fix_suggestion, name=\"AI Fix Suggestion\", attachment_type=allure.attachment_type.TEXT)\n    \n            # Raise test failure\n>           raise AssertionError(f\"❌ Login test failed: {e}\")\nE           AssertionError: ❌ Login test failed: Username input not found\nE           assert None is not None\n\ntests\\test_login.py:62: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1751969184513,"stop":1751969191655,"duration":7142},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: ❌ Login test failed: Username input not found\nassert None is not None","statusTrace":"driver = <appium.webdriver.webdriver.WebDriver (session=\"15b50050-592d-429b-9285-46bb8680ebbb\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login\")\n    def test_login_success(driver):\n        try:\n            # STEP 1: Enter username\n            username_locator = locators[\"username_input\"]\n            username = wait_for_element(driver, locators[\"username_input\"])\n>           assert username is not None, \"Username input not found\"\nE           AssertionError: Username input not found\nE           assert None is not None\n\ntests\\test_login.py:25: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"15b50050-592d-429b-9285-46bb8680ebbb\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login\")\n    def test_login_success(driver):\n        try:\n            # STEP 1: Enter username\n            username_locator = locators[\"username_input\"]\n            username = wait_for_element(driver, locators[\"username_input\"])\n            assert username is not None, \"Username input not found\"\n            username.send_keys(\"testuser\")\n    \n            # STEP 2: Enter password\n            password_locator = locators[\"password_input\"]\n            password = wait_for_element(driver, password_locator)\n            assert password is not None, \"Password input not found\"\n            password.send_keys(\"password123\")\n    \n            # STEP 3: Tap submit button\n            submit_locator = locators[\"submit_button\"]\n            submit = wait_for_element(driver, submit_locator)\n            assert submit is not None, \"Submit button not found\"\n            submit.click()\n    \n            # STEP 4: Wait for success UI (e.g., dashboard title)\n            success_title_locator = locators.get(\"dashboard_title\")\n            dashboard = wait_for_element(driver, success_title_locator)\n            assert dashboard is not None, \"Login likely failed: dashboard not loaded\"\n    \n            allure.attach(\"Login success\", name=\"Test Status\")\n    \n        except Exception as e:\n            screenshot_path = f\"screenshots/failed_login.png\"\n            driver.save_screenshot(screenshot_path)\n            allure.attach.file(screenshot_path, name=\"Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n    \n            # Optional: Use OCR fallback\n            ocr_text = extract_text_from_image(screenshot_path)\n            print(\"\uD83E\uDDE0 OCR Detected:\", ocr_text)\n    \n            # Optional: AI agent recovery suggestion\n            if AI_KEY:\n                fix_suggestion = ai_agent.suggest_fix(str(e), screenshot_path)\n                allure.attach(fix_suggestion, name=\"AI Fix Suggestion\", attachment_type=allure.attachment_type.TEXT)\n    \n            # Raise test failure\n>           raise AssertionError(f\"❌ Login test failed: {e}\")\nE           AssertionError: ❌ Login test failed: Username input not found\nE           assert None is not None\n\ntests\\test_login.py:62: AssertionError","steps":[],"attachments":[{"uid":"ee7b17894a2d4979","name":"Failure Screenshot","source":"ee7b17894a2d4979.png","type":"image/png","size":150872},{"uid":"3d3400c41c60331","name":"stdout","source":"3d3400c41c60331.txt","type":"text/plain","size":103}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1751969215681,"stop":1751969215962,"duration":281},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"epic","value":"Login Flow"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"DELL"},{"name":"thread","value":"16404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f8a386aaba3f1c7a.json","parameterValues":[]}