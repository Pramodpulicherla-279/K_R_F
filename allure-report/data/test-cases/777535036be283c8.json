{"uid":"777535036be283c8","name":"Test valid login with fallback OCR and AI suggestions","fullName":"tests.test_login#test_login_success","historyId":"86600b41e86dab7ca99f472fa61e4b05","time":{"start":1751971939266,"stop":1751971941155,"duration":1889},"status":"failed","statusMessage":"AssertionError: ❌ Test failed: 'WebDriver' object has no attribute 'find_element_by_xpath'","statusTrace":"driver = <appium.webdriver.webdriver.WebDriver (session=\"55d295ec-a3dd-4084-a116-195e172b0e0f\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login with fallback OCR and AI suggestions\")\n    def test_login_success(driver):\n        # STEP 1: Enter phone number (must use XPath only, not OCR)\n        try:\n>           phone_input = WebDriverWait(driver, 10).until(\n                lambda d: d.find_element_by_xpath(locators[\"phone_number_input\"])\n            )\n\ntests\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nd = <appium.webdriver.webdriver.WebDriver (session=\"55d295ec-a3dd-4084-a116-195e172b0e0f\")>\n\n>       lambda d: d.find_element_by_xpath(locators[\"phone_number_input\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^\n    )\nE   AttributeError: 'WebDriver' object has no attribute 'find_element_by_xpath'\n\ntests\\test_login.py:24: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"55d295ec-a3dd-4084-a116-195e172b0e0f\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login with fallback OCR and AI suggestions\")\n    def test_login_success(driver):\n        # STEP 1: Enter phone number (must use XPath only, not OCR)\n        try:\n            phone_input = WebDriverWait(driver, 10).until(\n                lambda d: d.find_element_by_xpath(locators[\"phone_number_input\"])\n            )\n            phone_input.send_keys(\"7660852538\")\n        # except Exception:\n        #     raise AssertionError(\"❌ Phone number input field not found via XPath. OCR fallback not allowed for input.\")\n    \n    \n    \n            # STEP 2: Tap next button\n            next_button = smart_find_element(\n                driver,\n                name=\"next_button_login\",\n                xpath=locators[\"next_button_login\"],\n                fallback_text=\"Next\"\n            )\n            assert next_button is not None, \"❌ Next button not found\"\n            next_button.click()\n    \n            # STEP 3: Wait for dashboard or success screen\n            dashboard = smart_find_element(\n                driver,\n                name=\"dashboard_title\",\n                xpath=locators[\"dashboard_title\"],\n                fallback_text=\"Dashboard\"\n            )\n            assert dashboard is not None, \"❌ Login likely failed: Dashboard not found\"\n    \n            allure.attach(\"✅ Login success\", name=\"Test Result\", attachment_type=allure.attachment_type.TEXT)\n    \n        except Exception as e:\n            screenshot_path = \"screenshots/failed_login.png\"\n            driver.save_screenshot(screenshot_path)\n            allure.attach.file(screenshot_path, name=\"Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n    \n            # OCR text capture\n            ocr_text = extract_text_with_coordinates(screenshot_path)\n            print(\"\uD83E\uDDE0 OCR Detected Text:\\n\", ocr_text)\n    \n            # AI agent suggestion (if enabled)\n            if AI_KEY:\n                fix = ai_agent.suggest_fix(str(e), screenshot_path)\n                allure.attach(fix, name=\"AI Fix Suggestion\", attachment_type=allure.attachment_type.TEXT)\n    \n>           raise AssertionError(f\"❌ Test failed: {str(e)}\")\nE           AssertionError: ❌ Test failed: 'WebDriver' object has no attribute 'find_element_by_xpath'\n\ntests\\test_login.py:67: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1751971931455,"stop":1751971939264,"duration":7809},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: ❌ Test failed: 'WebDriver' object has no attribute 'find_element_by_xpath'","statusTrace":"driver = <appium.webdriver.webdriver.WebDriver (session=\"55d295ec-a3dd-4084-a116-195e172b0e0f\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login with fallback OCR and AI suggestions\")\n    def test_login_success(driver):\n        # STEP 1: Enter phone number (must use XPath only, not OCR)\n        try:\n>           phone_input = WebDriverWait(driver, 10).until(\n                lambda d: d.find_element_by_xpath(locators[\"phone_number_input\"])\n            )\n\ntests\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nd = <appium.webdriver.webdriver.WebDriver (session=\"55d295ec-a3dd-4084-a116-195e172b0e0f\")>\n\n>       lambda d: d.find_element_by_xpath(locators[\"phone_number_input\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^\n    )\nE   AttributeError: 'WebDriver' object has no attribute 'find_element_by_xpath'\n\ntests\\test_login.py:24: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"55d295ec-a3dd-4084-a116-195e172b0e0f\")>\n\n    @allure.epic(\"Login Flow\")\n    @allure.title(\"Test valid login with fallback OCR and AI suggestions\")\n    def test_login_success(driver):\n        # STEP 1: Enter phone number (must use XPath only, not OCR)\n        try:\n            phone_input = WebDriverWait(driver, 10).until(\n                lambda d: d.find_element_by_xpath(locators[\"phone_number_input\"])\n            )\n            phone_input.send_keys(\"7660852538\")\n        # except Exception:\n        #     raise AssertionError(\"❌ Phone number input field not found via XPath. OCR fallback not allowed for input.\")\n    \n    \n    \n            # STEP 2: Tap next button\n            next_button = smart_find_element(\n                driver,\n                name=\"next_button_login\",\n                xpath=locators[\"next_button_login\"],\n                fallback_text=\"Next\"\n            )\n            assert next_button is not None, \"❌ Next button not found\"\n            next_button.click()\n    \n            # STEP 3: Wait for dashboard or success screen\n            dashboard = smart_find_element(\n                driver,\n                name=\"dashboard_title\",\n                xpath=locators[\"dashboard_title\"],\n                fallback_text=\"Dashboard\"\n            )\n            assert dashboard is not None, \"❌ Login likely failed: Dashboard not found\"\n    \n            allure.attach(\"✅ Login success\", name=\"Test Result\", attachment_type=allure.attachment_type.TEXT)\n    \n        except Exception as e:\n            screenshot_path = \"screenshots/failed_login.png\"\n            driver.save_screenshot(screenshot_path)\n            allure.attach.file(screenshot_path, name=\"Failure Screenshot\", attachment_type=allure.attachment_type.PNG)\n    \n            # OCR text capture\n            ocr_text = extract_text_with_coordinates(screenshot_path)\n            print(\"\uD83E\uDDE0 OCR Detected Text:\\n\", ocr_text)\n    \n            # AI agent suggestion (if enabled)\n            if AI_KEY:\n                fix = ai_agent.suggest_fix(str(e), screenshot_path)\n                allure.attach(fix, name=\"AI Fix Suggestion\", attachment_type=allure.attachment_type.TEXT)\n    \n>           raise AssertionError(f\"❌ Test failed: {str(e)}\")\nE           AssertionError: ❌ Test failed: 'WebDriver' object has no attribute 'find_element_by_xpath'\n\ntests\\test_login.py:67: AssertionError","steps":[],"attachments":[{"uid":"b5dd689bc8167521","name":"Failure Screenshot","source":"b5dd689bc8167521.png","type":"image/png","size":1061732},{"uid":"11cb413f2e000fb0","name":"stdout","source":"11cb413f2e000fb0.txt","type":"text/plain","size":1219}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1751971944238,"stop":1751971944541,"duration":303},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"epic","value":"Login Flow"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"DELL"},{"name":"thread","value":"22040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"777535036be283c8.json","parameterValues":[]}