{"uid":"d82165167bd54d15","name":"Test valid login","fullName":"tests.test_login#test_login_success","historyId":"86600b41e86dab7ca99f472fa61e4b05","time":{"start":1751966821443,"stop":1751966821443,"duration":0},"status":"broken","statusMessage":"TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)","statusTrace":"@pytest.fixture(scope=\"session\")\n    def driver():\n        desired_caps = {\n            \"platformName\": \"Android\",\n            \"platformVersion\": \"11\",  # Change to your device\n            \"deviceName\": \"AndroidDevice\",\n            \"appPackage\": \"com.example.app\",               # Replace with actual\n            \"appActivity\": \"com.example.app.MainActivity\", # Replace with actual\n            \"noReset\": True,\n            \"autoGrantPermissions\": True\n        }\n    \n>       driver = webdriver.Remote(\"http://localhost:4723/wd/hub\", desired_caps)\n\nconftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:238: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x2b70909b290>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x000002B709447EC0>, keep_alive = True, file_detector = None, options = None\nlocator_converter = <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x000002B709447FE0>, web_element_cls = <class 'appium.webdriver.webelement.WebElement'>\nclient_config = <appium.webdriver.client_config.AppiumClientConfig object at 0x000002B77F44D1F0>\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, List[BaseOptions]]] = None,\n        locator_converter: Optional[LocatorConverter] = None,\n        web_element_cls: Optional[type] = None,\n        client_config: Optional[ClientConfig] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        Parameters:\n        -----------\n        command_executor : str or remote_connection.RemoteConnection\n            - Either a string representing the URL of the remote server or a custom\n            remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n        keep_alive : bool (Deprecated)\n            - Whether to configure remote_connection.RemoteConnection to use HTTP keep-alive. Defaults to True.\n        file_detector : object or None\n            - Pass a custom file detector object during instantiation. If None, the default LocalFileDetector() will be used.\n        options : options.Options\n            - Instance of a driver options.Options class.\n        locator_converter : object or None\n            - Custom locator converter to use. Defaults to None.\n        web_element_cls : class\n            - Custom class to use for web elements. Defaults to WebElement.\n        client_config : object or None\n            - Custom client configuration to use. Defaults to None.\n        \"\"\"\n    \n        if options is None:\n>           raise TypeError(\n                \"missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\"\nE               TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\n\nC:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:230: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1751966821443,"stop":1751966821458,"duration":15},"status":"broken","statusMessage":"TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\n","statusTrace":"  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"F:\\K_R_F\\conftest.py\", line 20, in driver\n    driver = webdriver.Remote(\"http://localhost:4723/wd/hub\", desired_caps)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 238, in __init__\n    super().__init__(\n  File \"C:\\Users\\Pramo\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 230, in __init__\n    raise TypeError(\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"epic","value":"Login Flow"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"DELL"},{"name":"thread","value":"20380-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d82165167bd54d15.json","parameterValues":[]}